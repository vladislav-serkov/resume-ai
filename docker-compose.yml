services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: resume-ai-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: resume_ai
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - resume-ai-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: resume-ai-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8001
      - MONGO_URL=mongodb://mongodb:27017/resume_ai
      - DB_NAME=resume_ai
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    # volumes:
    #   - ./backend:/app
    #   - /app/node_modules
    networks:
      - resume-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: resume-ai-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8001/api
      - REACT_APP_ENV=production
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - resume-ai-network

  # Development services (commented out by default)
  # Uncomment for development mode
  
  # backend-dev:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev
  #   container_name: resume-ai-backend-dev
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=8001
  #     - MONGO_URL=mongodb://mongodb:27017/resume_ai_dev
  #     - DB_NAME=resume_ai_dev
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - ./backend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - resume-ai-network
  #   command: npm run dev

  # frontend-dev:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: resume-ai-frontend-dev
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8001/api
  #     - REACT_APP_ENV=development
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend-dev
  #   networks:
  #     - resume-ai-network
  #   command: npm start

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  resume-ai-network:
    driver: bridge